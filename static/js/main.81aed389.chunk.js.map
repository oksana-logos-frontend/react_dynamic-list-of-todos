{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todo","selectedTodoId","selectedTodo","selectedUserId","className","map","id","userId","completed","title","classNames","type","onClick","TodoFilter","setFilteredBy","filteredBy","setQuery","query","value","onChange","event","target","placeholder","style","pointerEvents","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","TodoModal","useState","user","setUser","todos","setTodos","useEffect","loadData","a","all","userFromServer","todosFromServer","selectedTodos","filter","hadlerModalClose","href","name","App","setSelectedUserId","setSelectedTodo","isLoading","setIsLoading","finally","filteredTodos","filterType","toLocaleLowerCase","includes","getFilteredTodo","queryFromInput","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81aed389.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo[],\n  selectedTodoId: number,\n  selectedTodo: (value: number) => void,\n  selectedUserId: (value: number) => void,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todo,\n  selectedTodoId,\n  selectedTodo,\n  selectedUserId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todo.map(({\n          id, userId, completed, title,\n        }) => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className={classNames('is-vcentered',\n              {\n                'is-expanded': completed === false,\n              })}\n            >\n              <p className={\n                completed === false\n                  ? 'has-text-danger'\n                  : 'has-text-success'\n              }\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {selectedTodoId === id\n                ? (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      selectedTodo(0);\n                      selectedUserId(0);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  </button>\n                )\n                : (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      selectedTodo(id);\n                      selectedUserId(userId);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  setFilteredBy: (value: string) => void;\n  setQuery: (value: string) => void;\n  filteredBy: string,\n  query: string;\n};\nexport const TodoFilter: React.FC<Props> = ({\n  setFilteredBy,\n  filteredBy,\n  setQuery,\n  query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filteredBy}\n            onChange={(event) => setFilteredBy(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query.length > 0\n            && (\n              // eslint-disable-next-line jsx-a11y/control-has-associated-label\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  setQuery('');\n                }}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getTodos, getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  userId: number;\n  selectedTodoId: number;\n  selectedTodo: (value: number) => void,\n  selectedUserId: (value: number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userId,\n  selectedTodoId,\n  selectedTodo,\n  selectedUserId,\n}) => {\n  const [user, setUser] = useState<User>();\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    const loadData = async () => {\n      const [userFromServer, todosFromServer] = await Promise.all([\n        getUser(userId), getTodos()]);\n\n      setUser(userFromServer);\n      setTodos(todosFromServer);\n    };\n\n    loadData();\n  }, [selectedTodoId]);\n\n  const selectedTodos = todos.filter(({ id }) => id === selectedTodoId);\n\n  const hadlerModalClose = () => {\n    selectedTodo(0);\n    selectedUserId(0);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          {selectedTodos.map(({ id, title, completed }) => (\n            <>\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={hadlerModalClose}\n                />\n              </header>\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {completed === true\n                    ? (<strong className=\"has-text-success\">Done</strong>)\n                    : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n                  {' by '}\n\n                  <a href=\"mailto:Sincere@april.biz\">\n                    {user.name}\n                  </a>\n                </p>\n              </div>\n\n            </>\n\n          ))}\n\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport function getFilteredTodo(\n  todos: Todo[],\n  filterType: string,\n  query: string,\n) {\n  const filterBy = todos.filter((todo) => {\n    switch (filterType) {\n      case 'all':\n        return todo;\n\n      case 'completed':\n        return todo.completed === true;\n\n      case 'active':\n        return todo.completed === false;\n\n      default:\n        return 0;\n    }\n  });\n\n  return filterBy.filter(({ title }) => (\n    title.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n  ));\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedTodo, setSelectedTodo] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [filteredBy, setFilteredBy] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(todo => setTodos(todo))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const filteredTodos = getFilteredTodo(todos, filteredBy, query);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilteredBy={setFilteredBy}\n                setQuery={(queryFromInput) => {\n                  setQuery(queryFromInput);\n                }}\n                filteredBy={filteredBy}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n\n              { isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todo={filteredTodos}\n                    selectedTodoId={selectedTodo}\n                    selectedTodo={(id) => {\n                      setSelectedTodo(id);\n                    }}\n                    selectedUserId={(userId) => {\n                      setSelectedUserId(userId);\n                    }}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo !== 0\n        && (\n          <TodoModal\n            userId={selectedUserId}\n            selectedTodoId={selectedTodo}\n            selectedTodo={(id) => {\n              setSelectedTodo(id);\n            }}\n            selectedUserId={(userId) => {\n              setSelectedUserId(userId);\n            }}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}